
name: Find Gcloud Function
on:
  workflow_call:

jobs:
  check_function_exists:
    permissions:
      contents: read
      id-token: write 
    runs-on: ubuntu-latest
    environment: ${{ inputs.deploy_prod && 'production' || 'development' }}
    steps:   
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 #@v3.1.0
      - name: Set deployment vars
        uses: ./.github/actions/deploy_strategy
        id: deploy_vars
        with: 
          deploy_prod: ${{ inputs.deploy_prod }}

      - name: Auth gcloud
        id: gauth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # @v1
        with:
          workload_identity_provider: '${{ secrets.GWIP }}'
          service_account: '${{ secrets.GSA }}'
          # create_credentials_file: false
      # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1' 

      - name: find-function
       # Deploy function for every website PR deployed for previews
        id: find_function
        shell: bash
        run: |
          if gcloud functions describe --region ${{ env.REGION }} ${{ steps.deploy_vars.outputs.function_name }} &> /dev/null; then
          # False if not in main branch and function already exist. If there's code changes the functions job will trigger itself
            FUNCTION_NAME=$(gcloud functions describe --region ${{ env.REGION }} ${{ steps.deploy_vars.outputs.function_name }} --format="value(httpsTrigger.url)")
            echo "function_url=$FUNCTION_NAME" >> $GITHUB_OUTPUT
          else
            echo "function_url=''" >> $GITHUB_OUTPUT
            if !${{ contains(github.event.action, 'open') }}
              echo "::error title=Function not found::Function ${{ steps.deploy_vars.outputs.function_name }} not found and this is not a new PR"
          fi
    outputs:
      function_URL: ${{ steps.find_function.outputs.function_url }} 