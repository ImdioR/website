name: Deploy /functions to Gcloud
on:
  pull_request:
    paths: 
      - 'functions/*'
      - '.github/workflows/functions-deploy.yml'
  push:
    branches:
      - "main"

  workflow_call:
    inputs:
      deploy_prod:
        description: "Deploy to prod (requires approval and wait time 120m)"
        default: false
        type: boolean
      website_pr:
        description: "Job called from a website pr"
        default: false
        type: boolean
    outputs:
      function_URL: 
        value: ${{ jobs.deploy-functions.outputs.function_url || jobs.check_function_exists.outputs.function_url }}
        description: "function URL (if found) or empty otherwise"
    
jobs:
  check_exists:
    secrets: inherit
    uses: ./.github/workflows/check-function.yml

  build-functions:
    needs: check_exists
    if: (inputs.website_pr && ${{ needs.check_exists.function_URL == '' }}) || inputs.website_pr == ''   
    # If workflow_call didn't trigger this workflow then website_pr == ''
    # If workflow_call is triggered from website-deploy.yml website_pr always be true
    concurrency:
      group: functions-${{ github.ref }}
      cancel-in-progress: true     
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 #@v3.1.0
      - name: Set .env for functions
        run: echo "CENTRIFUGE_SUBGRAPH_URL=https://graph.centrifuge.io/tinlake" > functions/.env
      - name: print .env
        run: cat functions/.env
      - name: Setup Node
        uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516 #@v3
        with:
          node-version: 18
          cache: yarn
      - name: Install Dependencies
        run: yarn install
      - name: Build
        run: yarn build:functions
      - name: Archive functions artifacts
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # @v3.1.2
        with:
          name: func-dist
          retention-days: 1
          path: functions/dist
          # !dist/**/*.md

  deploy-functions:
    needs: check_exists
    if: inputs.website_pr || inputs.website_pr == ''   
    # If workflow_call didn't trigger website_pr == ''
    # If workflow_call is triggered from website-deploy.yml it'll always be true  
    outputs:
      function_url: ${{ steps.gclouddeploy.outputs.url }}  
    concurrency:
      group: functions-${{ github.ref }}
      cancel-in-progress: true    
    permissions:
      contents: 'read'
      id-token: 'write'  
    runs-on: ubuntu-latest
    # Deployment strategy:
    # prod if deploying from main branch or preview from PRs
    environment: ${{ inputs.deploy_prod && 'production' || 'development' }}
    # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
    steps:
      - name: Checkout
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 #@v3.1.0    
      - name: Set deployment vars
        uses: ./.github/actions/deploy_strategy
        id: deploy_vars
        with: 
          deploy_prod: ${{ inputs.deploy_prod }}    
      - name: Auth gcloud
        id: gauth
        uses: google-github-actions/auth@ef5d53e30bbcd8d0836f4288f5e50ff3e086997d # @v1
        with:
          workload_identity_provider: '${{ secrets.GWIP }}'
          service_account: '${{ secrets.GSA }}'
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@d51b5346f85640ec2aa2fa057354d2b82c2fcbce # v1.0.1   

      - name: Wait for build to succeed
        uses: lewagon/wait-on-check-action@3a563271c3f8d1611ed7352809303617ee7e54ac
        with:
          ref: ${{ github.ref }}
          check-name: build-functions
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 5

      - name: download the distribution package
        id: download
        uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # @v3.0.2
        with:
          name: func-dist
    
      - name: Deploy to google functions
        id: gclouddeploy
        uses: google-github-actions/deploy-cloud-functions@14509ca55199d9348161571e36c48e44f855030d #@v1
        with:
          name: ${{ steps.deploy_vars.outputs.function_name }}
          runtime: nodejs16
          region: ${{ vars.GCP_REGION }}
          source_dir: ${{steps.download.outputs.download-path}}
          entry_point: 'handler'
          https_trigger_security_level: 'secure_always'
          max_instances: ${{ steps.deploy_vars.outputs.max_instances  }}


      - name: Change function to allow_unathorized calls 
        shell: bash
        run: |
          gcloud functions add-iam-policy-binding ${{ steps.deploy_vars.outputs.function_name }} \
          --region=${{ vars.GCP_REGION }} \
          --member="allUsers" --role="roles/cloudfunctions.invoker"

